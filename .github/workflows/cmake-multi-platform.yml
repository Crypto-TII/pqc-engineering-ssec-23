# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: CMake on multiple platforms

on:
  push:
    branches: [ "1-create-cicd-environment" ]
  pull_request:
    branches: [ "1-create-cicd-environment" ]

jobs:
  build-all:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set reusable strings
        # Turn repeated input strings (such as the build output directory) into step outputs. These step outputs can be used throughout the workflow file.
        id: strings
        shell: bash
        run: |
          echo "build-ccode-dir=${{ github.workspace }}/c-code" >> "$GITHUB_OUTPUT"
          echo "build-output-dir=${{ github.workspace }}/c-code/cmake-build-release" >> "$GITHUB_OUTPUT"


      - name: Configuring CMake for all primes' libraries and tests targets
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: |
          cd c-code
          cmake -B cmake-build-release -DCMAKE_C_COMPILER=gcc -DCMAKE_BUILD_TYPE=Release

      - name: Build all primes' libraries and tests targets
        # Build your program with the given configuration. Note that --config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
        working-directory: ${{ steps.strings.outputs.build-output-dir }}
        run: |
          make

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: cmake-build-release
          path: ${{ steps.strings.outputs.build-output-dir }}


  test-p254:
    name: Test prime 254
    runs-on: ubuntu-latest
    needs: build-all
    steps:
      - name: Downloading p254 artifact
        uses: actions/download-artifact@v4
        with:
          name: cmake-build-release
          path: ${{ steps.strings.outputs.build-output-dir }}

      - name: Restoring execution permission
        working-directory: ${{ steps.strings.outputs.build-output-dir }}
        run: |
          cd tests
          chmod +x tests-ssec-p254

      - name: Test
        working-directory: ${{ steps.strings.outputs.build-output-dir }}
        # Execute tests defined by the CMake configuration. Note that --build-config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: |
          cd tests
          ./tests-ssec-p254
